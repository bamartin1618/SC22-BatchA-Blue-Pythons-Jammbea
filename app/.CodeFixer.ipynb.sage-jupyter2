{"backend_state":"running","connection_file":"/projects/2e2d14b2-3bf0-4b31-bb59-a06cad86df13/.local/share/jupyter/runtime/kernel-132d9d5b-ce8f-4754-b5f6-b8acd0915316.json","kernel":"nlp_env","kernel_error":"","kernel_state":"idle","trust":true,"type":"settings"}
{"end":1655844471348,"exec_count":2,"id":"d3d5d5","input":"!pip install flake8","kernel":"nlp_env","output":{"0":{"name":"stdout","text":"Collecting flake8\r\n  Downloading flake8-4.0.1-py2.py3-none-any.whl (64 kB)\r\n\u001b[?25l\r\u001b[K     |█████▏                          | 10 kB 18.8 MB/s eta 0:00:01\r\u001b[K     |██████████▎                     | 20 kB 24.1 MB/s eta 0:00:01\r\u001b[K     |███████████████▍                | 30 kB 29.1 MB/s eta 0:00:01\r\u001b[K     |████████████████████▌           | 40 kB 30.9 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▋      | 51 kB 33.5 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▊ | 61 kB 28.8 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 64 kB 3.7 MB/s \r\n"},"1":{"name":"stdout","text":"\u001b[?25hCollecting pyflakes<2.5.0,>=2.4.0\r\n  Downloading pyflakes-2.4.0-py2.py3-none-any.whl (69 kB)\r\n\u001b[?25l\r\u001b[K     |████▊                           | 10 kB 27.7 MB/s eta 0:00:01\r\u001b[K     |█████████▍                      | 20 kB 36.8 MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 30 kB 44.1 MB/s eta 0:00:01\r\u001b[K     |██████████████████▉             | 40 kB 49.1 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▌        | 51 kB 54.5 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 61 kB 57.5 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 69 kB 14.3 MB/s \r\n"},"2":{"name":"stdout","text":"\u001b[?25hRequirement already satisfied: pycodestyle<2.9.0,>=2.8.0 in /projects/2e2d14b2-3bf0-4b31-bb59-a06cad86df13/.local/lib/python3.8/site-packages (from flake8) (2.8.0)\r\n"},"3":{"name":"stdout","text":"Collecting mccabe<0.7.0,>=0.6.0\r\n  Downloading mccabe-0.6.1-py2.py3-none-any.whl (8.6 kB)\r\n"},"4":{"name":"stdout","text":"Installing collected packages: pyflakes, mccabe, flake8\r\n"},"5":{"name":"stdout","text":"Successfully installed flake8-4.0.1 mccabe-0.6.1 pyflakes-2.4.0\r\n"}},"pos":0,"start":1655844468051,"state":"done","type":"cell"}
{"end":1655845506696,"exec_count":22,"id":"46908e","input":"codefile = open('bluepythontest.py', 'w')\n\ngenerated_code = ai.generate_one(prompt = 'import random', temperature = 0.7, max_length = 250).split('\\n')\n\nfor line in generated_code:\n    print(line)\n    codefile.write(line)\n    \ncodefile.close()","kernel":"nlp_env","output":{"0":{"name":"stdout","text":"import random.tmp(self._components, objects.InstancePCIRequests)\r\n\r\n    def _is_indel_query(self, query, statement=0):\r\n        \r\n\r\n        if self._has_list_nodent(query, statement == 0:\r\n            statement = query.get_query_statement(query)\r\n            if self._scanning_list_variable_index():\r\n                self._statement = Explain(statement)\r\n                self._statement = self._variable_statement(statement)\r\n                if self._query_empty(self._components, objects.InstancePCIRequests)\r\n\r\n    def _is_list_variable(self):\r\n        \r\n\r\n        return self._components\r\n\r\n    def _tokenize(self, value, index):\r\n        \r\n\r\n        if not self._components:\r\n            return [(value, TCOKS_SOLDERS_URL_SIZE = self\n"}},"pos":2,"start":1655845490665,"state":"done","type":"cell"}
{"end":1655845517213,"exec_count":23,"id":"2fd110","input":"import os\n\nos.system(\"autopep8 -i bluepythontest.py\")\n\ngenerated_code = open('bluepythontest.py', 'r')\n\nfor line in generated_code.readlines():\n    print(line)","kernel":"nlp_env","output":{"0":{"name":"stdout","text":"import random.tmp(self._components\n\nimport objects.InstancePCIRequests)\n\n\n\n    def _is_indel_query(self, query, statement=0):\n\n\n\n        if self._has_list_nodent(query, statement == 0:\n\n            statement=query.get_query_statement(query)\n\n            if self._scanning_list_variable_index():\n\n                self._statement=Explain(statement)\n\n                self._statement=self._variable_statement(statement)\n\n                if self._query_empty(self._components, objects.InstancePCIRequests)\n\n\n\n    def _is_list_variable(self):\n\n\n\n\n\n        return self._components\n\n\n\n    def _tokenize(self, value, index):\n\n\n\n\n\n        if not self._components:\n\n            return [(value, TCOKS_SOLDERS_URL_SIZE=self\n\n"}},"pos":3,"start":1655845517075,"state":"done","type":"cell"}
{"exec_count":4,"id":"245841","input":"from aitextgen import aitextgen\n\nai = aitextgen(model_folder=\"model/\",\n               tokenizer_file=\"model/aitextgen.tokenizer.json\", to_gpu=False)","kernel":"nlp_env","output":{"0":{"ename":"NameError","evalue":"name 'prompt' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [4]\u001b[0m, in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01maitextgen\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m aitextgen\n\u001b[1;32m      3\u001b[0m ai \u001b[38;5;241m=\u001b[39m aitextgen(model_folder\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmodel/\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m      4\u001b[0m                tokenizer_file\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmodel/aitextgen.tokenizer.json\u001b[39m\u001b[38;5;124m\"\u001b[39m, to_gpu\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m)\n\u001b[0;32m----> 5\u001b[0m ai\u001b[38;5;241m.\u001b[39mgenerate_one(prompt \u001b[38;5;241m=\u001b[39m \u001b[43mprompt\u001b[49m, temperature \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m0.8\u001b[39m, max_length \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m250\u001b[39m)\n","\u001b[0;31mNameError\u001b[0m: name 'prompt' is not defined"]}},"pos":1,"state":"done","type":"cell"}
{"exec_count":9,"id":"0d07b0","input":"","kernel":"nlp_env","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (3984627249.py, line 1)","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [9]\u001b[0;36m\u001b[0m\n\u001b[0;31m    import random.shuffle(readlist)\u001b[0m\n\u001b[0m                         ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":4,"scrolled":true,"state":"done","type":"cell"}
{"id":"036f82","input":"","pos":5,"type":"cell"}
{"id":"bf6b7a","input":"","pos":2.5,"type":"cell"}
{"id":0,"time":1655844408806,"type":"user"}
{"last_load":1655844352413,"type":"file"}